lang -> expr+
expr -> init | if | loopwhile

init -> VAR ASSIGN_OP stmt
stmt -> value(OP value)*
value -> VAR | digit | brcktexpr
brcktexpr -> BRACKET_OPEN stmt BRACKET_CLOSE

loopwhile -> WHILE_KW BRACKET_OPEN comp BRACKET_CLOSE FBRACKET_OPEN expr* FBRACKET_CLOSE
if_stmt -> IF_KW BRACKET_OPEN comp BRACKET_CLOSE FBRACKET_OPEN expr* FBRACKET_CLOSE
comp -> stmt COMPARE_OP stmt

IF_KW -> "IF"
WHILE_KW -> "WHILE"
DO_KW -> "DO"
VAR -> [a-zA-Z_][a-zA-Z0-9_]*
OP -> "+" | "-" | "/" | "*"

ASSIGN_OP -> "="
COMPARE_OP -> "!=" | ">" | "<" | ">=" | "<=" | "=="

digit -> INT | FLOAT
INT -> -?[1-9][0-9]*
FLOAT -> -?[0-9].[0-9]+

BRACKET_OPEN -> "("
BRACKET_CLOSE -> ")"
FBRACKET_OPEN -> "{"
FBRACET_CLOSE -> "}"







